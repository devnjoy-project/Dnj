@using Dnj.Samples.UnitOfWork.Shared
<EditForm Model="@dto" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">

        <label asp-for="@dto.ParamString"></label>
        <div>
            <InputText @bind-Value="@dto.ParamString"/>
            <ValidationMessage For="@(() => dto.ParamString)"/>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Param Int:</label>
            <div>
                <InputNumber @bind-Value="@dto.ParamInt" />
                <ValidationMessage For="@(() => dto.ParamInt)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Param Date :</label>
            <div>
                <InputDate @bind-Value="@dto.ParamDate" />
                <ValidationMessage For="@(() => dto.ParamDate)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Param Decimal :</label>
            <div>
                <InputNumber @bind-Value="@dto.ParamDecimal" />
                <ValidationMessage For="@(() => dto.ParamDecimal)" />
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-success">
        @ButtonText
    </button>
</EditForm>
@code {
    [Parameter] public UnitOfWorkDto dto { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
}